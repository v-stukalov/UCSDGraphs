{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Italic;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red128\green128\blue128;\red103\green103\blue103;
\red0\green0\blue128;\red61\green61\blue61;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
Class: 
\b MapGraph
\b0 \
\
Modifications made to MapGraph (what and why):\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\i\fs24 \cf3 \kerning1\expnd0\expndtw0 \uc0\u8232 
\f0\i0\fs28 \cf0 1 
\b variable
\b0  Map<GeographicPoint, MapNode> 
\b graph
\b0 ; \cf4 - keep the road map graph\cf2 \expnd0\expndtw0\kerning0
\

\f1\i\fs24 \cf3 \kerning1\expnd0\expndtw0 \uc0\u8232 
\f0\i0\fs28 \cf0 2
\b \cf5  \cf0 helper method\cf5  
\b0 \cf0 List<GeographicPoint> 
\b constructPath
\b0 () - \cf3 construct the path based on linked locations map\cf0 \uc0\u8232 Params:\
	\cf6 start     \cf3 The starting location\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf6 	goal      \cf3 The goal location\
\cf6 	parentMap \cf3 Contains the path that we are looking for. The key of this map means the current position on a path, whereas the value is the next place we have to visit\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf0 Return:\cf3  the path between two locations
\f1\i\fs24 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\i0\fs28 \cf0 3 
\b helper method
\b0  boolean 
\b bfsSearch
\b0 () - \cf3 Find the path between two locations and store it parentMap variable\cf0 \
Params:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf6 	start        \cf3 The starting location\uc0\u8232 \cf6 	goal         \cf3 The goal location\uc0\u8232 \cf6 	parentMap    \cf3 Contains the path that we are looking for\uc0\u8232 \cf6 	nodeSearched \cf3 A hook for visualization\uc0\u8232 \cf0 Return:\cf3  true is the path has been found, and false otherwise
\f2 \cf0 \uc0\u8232 
\f0 \cf2 \expnd0\expndtw0\kerning0
\
\
\
Class name: 
\b \cf0 \kerning1\expnd0\expndtw0 MapNode
\b0 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf2 \
Purpose and description of class:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf3 \kerning1\expnd0\expndtw0 Vertex (node) on the road map graph. Keeps its geographic location and the set of roads (edges) intersecting in it.\cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf2 \
\
\
Class name: 
\b \cf0 \kerning1\expnd0\expndtw0 MapEdge\

\b0 \cf2 \expnd0\expndtw0\kerning0
\
Purpose and description of class:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf4 \kerning1\expnd0\expndtw0 Road (edge) in the road map graph. Among other, keeps the data of its starting and destination points.\cf0 \uc0\u8232 \cf2 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720
\cf2 Overall Design Justification:\
\
Keeping the data in 
\b HashMap
\b0  means quick access (O(1)) to each location. It matters while finding paths between locations.\

\b MapEdge
\b0  class keeps various data of the road and is coupled tightly with the locations (MapNode) it connects.\
\
The set of roads that are intersecting in current location is encapsulated in 
\b MapNode
\b0  class. It allows us iterate effectively through node neighbors. HashSet ensures no repetitions.\
\

\b Note
\b0  that suggested structure consists of minimum reasonable amount of classes, and at the same time, provides us with quite a few useful methods for various searching algorithms implementation.}